library(shiny); runApp('app - after breaking.R')
runApp('app - after breaking.R')
runApp('app - after breaking.R')
library(shinylive)
library(fs)
sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Conferences/Low Effort Survey Responses"
# Define the path to the new folder for the shinylive app inside the existing app folder
new_app_path <- file.path(existing_app_path, "myapp")
# Copy the existing Shiny app to the new folder
fs::dir_copy(existing_app_path, new_app_path, overwrite = TRUE)
# Export the new app to a static site using shinylive
shinylive::export(new_app_path, file.path(existing_app_path, "site"))
sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "Desktop/Low Effort Survey Responses/test - low effort"
# Define the path to the new folder for the shinylive app inside the existing app folder
new_app_path <- file.path(existing_app_path, "myapp")
# Copy the existing Shiny app to the new folder
fs::dir_copy(existing_app_path, new_app_path, overwrite = TRUE)
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/low effort - test"
# Define the path to the new folder for the shinylive app inside the existing app folder
new_app_path <- file.path(existing_app_path, "myapp")
# Copy the existing Shiny app to the new folder
fs::dir_copy(existing_app_path, new_app_path, overwrite = TRUE)
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort"
# Define the path to the new folder for the shinylive app inside the existing app folder
new_app_path <- file.path(existing_app_path, "myapp")
# Copy the existing Shiny app to the new folder
fs::dir_copy(existing_app_path, new_app_path, overwrite = TRUE)
# Export the new app to a static site using shinylive
shinylive::export(new_app_path, file.path(existing_app_path, "site"))
library(shinylive)
library(fs)
sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort"
# Define the path to the new folder for the shinylive app inside the existing app folder
new_app_path <- file.path(existing_app_path, "myapp")
# Copy the existing Shiny app to the new folder
fs::dir_copy(existing_app_path, new_app_path, overwrite = TRUE)
# Export the new app to a static site using shinylive
shinylive::export(new_app_path, file.path(existing_app_path, "site"))
# Print a message to manually serve the site using Python
message("Static site created. Open a terminal and run the following command to serve the site:")
message("cd ", file.path(existing_app_path, "site"))
message("python -m http.server")
install.packages(c("cli", "crayon", "digest", "effectsize", "emmeans", "evaluate", "ggeffects", "gt", "insight", "knitr", "lhs", "lme4", "marginaleffects", "modeldata", "nloptr", "parameters", "performance", "pkgload", "prodlim", "ps", "psych", "RcppArmadillo", "reactR", "recipes", "reprex", "reticulate", "rlang", "SparseM", "ucminf", "xfun", "XML", "yaml"))
library(shinylive)
library(fs)
sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort"
# Define the path to the new folder for the shinylive app inside the existing app folder
new_app_path <- file.path(existing_app_path, "myapp")
# Copy the existing Shiny app to the new folder
fs::dir_copy(existing_app_path, new_app_path, overwrite = TRUE)
# Export the new app to a static site using shinylive
shinylive::export(new_app_path, file.path(existing_app_path, "site"))
# Print a message to manually serve the site using Python
message("Static site created. Open a terminal and run the following command to serve the site:")
message("cd ", file.path(existing_app_path, "site"))
message("python -m http.server")
library(shinylive)
library(fs)
sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort"
# Define the path to the new folder for the shinylive app inside the existing app folder
new_app_path <- file.path(existing_app_path, "myapp")
# Copy the existing Shiny app to the new folder
fs::dir_copy(existing_app_path, new_app_path, overwrite = TRUE)
# Export the new app to a static site using shinylive
shinylive::export(new_app_path, file.path(existing_app_path, "site"))
# Print a message to manually serve the site using Python
message("Static site created. Open a terminal and run the following command to serve the site:")
message("cd ", file.path(existing_app_path, "site"))
message("python -m http.server")
library(shinylive)
library(fs)
sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort"
# Define the path to the new folder for the shinylive app inside the existing app folder
new_app_path <- file.path(existing_app_path, "myapp")
# Copy the existing Shiny app to the new folder
fs::dir_copy(existing_app_path, new_app_path, overwrite = TRUE)
# Export the new app to a static site using shinylive
shinylive::export(new_app_path, file.path(existing_app_path, "site"))
# Print a message to manually serve the site using Python
message("Static site created. Open a terminal and run the following command to serve the site:")
message("cd ", file.path(existing_app_path, "site"))
message("python -m http.server")
message("cd ", file.path(existing_app_path, "site"))
library(shinylive)
library(fs)
sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort"
# Define the path to the new folder for the shinylive app inside the existing app folder
new_app_path <- file.path(existing_app_path, "myapp")
# Copy the existing Shiny app to the new folder
fs::dir_copy(existing_app_path, new_app_path, overwrite = TRUE)
# Export the new app to a static site using shinylive
shinylive::export(new_app_path, file.path(existing_app_path, "site"))
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort/myapp"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort/myapp/docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort/myapp/docs")
#library(shinylive)
library(fs)
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort/myapp"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort/myapp/docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort/myapp/docs")
library(shinylive)
library(fs)
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort/myapp"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort/myapp/docs")
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test/myapp"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test/myapp/docs")
httpuv::runStaticServer("docs")
packageVersion("pkgdepends")
remove.packages("pkgdepends")
library(remotes)
remotes::install_version("pkgdepends", version = "0.7.2")
packageVersion("pkgdepends")
remove.packages("ps")
remotes::install_version("ps", version = "1.7.7")
packageVersion("ps")
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test/myapp"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test/myapp/docs")
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test/myapp"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test/myapp/docs")
httpuv::runStaticServer("docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test/myapp/docs")
shiny::runApp()
library(shinylive)
library(fs)
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort - Copy/myapp"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort - Copy/myapp/docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort - Copy/myapp/docs")
# Load necessary libraries
#library(tidyverse)
#library(openxlsx) #YES
# detach openxlsx
detach("package:openxlsx", unload=TRUE)
# Load necessary libraries
#library(tidyverse)
#library(openxlsx) #YES
# detach openxlsx
detach("openxlsx", unload=TRUE)
# Load necessary libraries
#library(tidyverse)
#library(openxlsx) #YES
# detach openxlsx
detach("package:openxlsx", unload = TRUE)
library(shinylive)
library(fs)
#sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort - Copy/myapp"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort - Copy/myapp/docs")
#httpuv::runStaticServer("docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/test - low effort - Copy/myapp/docs")
shiny::runApp()
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test - openxlsx/myapp')
library(shinylive)
library(fs)
#sessionInfo()
# library(remotes)
# remove.packages("pkgdepends")
# remove.packages("ps")
# remove.packages("shinylive")
# remove.packages("httpuv")
# remotes::install_version("pkgdepends", version = "0.7.2")
# remotes::install_version("ps", version = "1.7.7")
# remotes::install_version("shinylive", version = "0.1.1")
# install.packages(c("Rcpp", "later", "promises"))
# remotes::install_version("httpuv", version = "1.6.13")
# # packageVersion("pkgdepends")
# # packageVersion("ps")
# packageVersion("shinylive")
# packageVersion("httpuv")
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test - openxlsx/myapp"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test - openxlsx/myapp/docs")
#httpuv::runStaticServer("docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test - openxlsx/myapp/docs")
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test - openxlsx/myapp')
library(shinylive)
library(fs)
#sessionInfo()
# library(remotes)
# remove.packages("pkgdepends")
# remove.packages("ps")
# remove.packages("shinylive")
# remove.packages("httpuv")
# remotes::install_version("pkgdepends", version = "0.7.2")
# remotes::install_version("ps", version = "1.7.7")
# remotes::install_version("shinylive", version = "0.1.1")
# install.packages(c("Rcpp", "later", "promises"))
# remotes::install_version("httpuv", version = "1.6.13")
# # packageVersion("pkgdepends")
# # packageVersion("ps")
# packageVersion("shinylive")
# packageVersion("httpuv")
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test - openxlsx/myapp"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test - openxlsx/myapp/docs")
#httpuv::runStaticServer("docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Desktop/shinylive - minimal test - openxlsx/myapp/docs")
# remove.packages("httpuv")
# remotes::install_version("pkgdepends", version = "0.7.2")
# remotes::install_version("ps", version = "1.7.7")
# remotes::install_version("shinylive", version = "0.1.1")
# install.packages(c("Rcpp", "later", "promises"))
# remotes::install_version("httpuv", version = "1.6.13")
# # packageVersion("pkgdepends")
# # packageVersion("ps")
# packageVersion("shinylive")
# packageVersion("httpuv")
packageVersion("openxlsx")
# library(remotes)
# remove.packages("pkgdepends")
# remove.packages("ps")
# remove.packages("shinylive")
# remove.packages("httpuv")
remove.packages(openxlsx)
#sessionInfo()
library(openxlsx)
# library(remotes)
# remove.packages("pkgdepends")
# remove.packages("ps")
# remove.packages("shinylive")
# remove.packages("httpuv")
remove.packages(openxlsx)
# library(remotes)
# remove.packages("pkgdepends")
# remove.packages("ps")
# remove.packages("shinylive")
# remove.packages("httpuv")
remove.packages("openxlsx")
# remotes::install_version("pkgdepends", version = "0.7.2")
# remotes::install_version("ps", version = "1.7.7")
# remotes::install_version("shinylive", version = "0.1.1")
# install.packages(c("Rcpp", "later", "promises"))
# remotes::install_version("httpuv", version = "1.6.13")
remotes::install_version("openxlsx", version = "4.2.7")
library(openxlsx)
shiny::runApp()
library(shinylive)
library(fs)
#sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/Low-Effort-IR-Survey-Responses-App"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/Low-Effort-IR-Survey-Responses-App/docs")
#httpuv::runStaticServer("docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/Low-Effort-IR-Survey-Responses-App/docs")
runApp()
library(shinylive)
library(fs)
#sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/Low-Effort-IR-Survey-Responses-App"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/Low-Effort-IR-Survey-Responses-App/docs")
#httpuv::runStaticServer("docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/Low-Effort-IR-Survey-Responses-App/docs")
library(shinylive)
library(fs)
#sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/Low-Effort-IR-Survey-Responses-App"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/Low-Effort-IR-Survey-Responses-App/docs")
#httpuv::runStaticServer("docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/Low-Effort-IR-Survey-Responses-App/docs")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
# Function to remove singular columns (i.e. columns with zero variance or perfect collinearity)
# NSSE files sometimes have identical columns
remove_singular_columns <- function(data, threshold = 0.999) {
# Convert all columns to numeric
data_numeric <- data %>%
mutate(across(everything(), as.numeric))
# Remove columns with zero variance
var_zero <- apply(data_numeric, 2, var, na.rm = TRUE) == 0
if(any(var_zero)) {
data_numeric <- data_numeric[, !var_zero]
cat("Removed", sum(var_zero), "columns with zero variance\n")
}
# Calculate correlation matrix
cor_matrix <- cor(data_numeric, use = "pairwise.complete.obs")
# Find highly correlated pairs
high_cor <- which(abs(cor_matrix) > threshold & cor_matrix != 1, arr.ind = TRUE)
if(nrow(high_cor) > 0) {
# Keep track of columns to remove
cols_to_remove <- c()
# For each pair of highly correlated columns
for(i in 1:nrow(high_cor)) {
if(high_cor[i,1] < high_cor[i,2]) {  # Only process each pair once
col1 <- colnames(data_numeric)[high_cor[i,1]]
col2 <- colnames(data_numeric)[high_cor[i,2]]
# If neither column has been marked for removal yet
if(!(col1 %in% cols_to_remove) && !(col2 %in% cols_to_remove)) {
# Choose the column with more NAs to remove
na_count1 <- sum(is.na(data_numeric[[col1]]))
na_count2 <- sum(is.na(data_numeric[[col2]]))
if(na_count1 >= na_count2) {
cols_to_remove <- c(cols_to_remove, col1)
} else {
cols_to_remove <- c(cols_to_remove, col2)
}
}
}
}
if(length(cols_to_remove) > 0) {
cat("Removed", length(cols_to_remove), "highly correlated columns:",
paste(cols_to_remove, collapse = ", "), "\n")
data_numeric <- data_numeric %>% select(-all_of(cols_to_remove))
}
}
return(data_numeric)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- read_sav("C:/Users/sherrins/Downloads/NSSE24 Sample Data (US)_.sav")
glimpse(df)
hist(df$duration)
hist(df$duration, max = 40)
View(df)
runApp()
runApp()
runApp()
runApp()
library(shinylive)
library(fs)
#sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/IR-Low-Effort-Survey-Responses-App"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/IR-Low-Effort-Survey-Responses-App/docs")
#httpuv::runStaticServer("docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/IR-Low-Effort-Survey-Responses-App/docs")
library(shinylive)
library(fs)
#sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/IR-Low-Effort-Survey-Responses-App"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/IR-Low-Effort-Survey-Responses-App/docs")
#httpuv::runStaticServer("docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/IR-Low-Effort-Survey-Responses-App/docs")
library(shinylive)
library(fs)
#sessionInfo()
# Define the path to your existing Shiny app
existing_app_path <- "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/IR-Low-Effort-Survey-Responses-App"
shinylive::export(appdir = existing_app_path, destdir = "C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/IR-Low-Effort-Survey-Responses-App/docs")
#httpuv::runStaticServer("docs")
httpuv::runStaticServer("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/Documents/GitHub/IR-Low-Effort-Survey-Responses-App/docs")
library(shiny); runApp('app - removing individual examples.R')
